{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","getChildren","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","itemDisabledStyle","item","_","find","child","value","selectedValue","get","Array","isArray","concat","apply","React","cloneElement","iosIcon","fontSize","lineHeight","onPress","enabled","undefined","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","note","placeholderStyle","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","marginLeft","headerBackButtonStyle","headerBackButtonTextStyle","headerBackButtonText","headerTitleStyle","iosHeader","_root","c","modalStyle","index","String","disabled","onValueChange","current","label","itemTextStyle","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"61BAAA,4B,2CACA,qC,mDACA,oD,iEACA,yCACA,8B,6CACA,4BACA,4BACA,gCACA,8BACA,sCACA,oCACA,gCACA,gCACA,8BACA,4BACA,8BACA,4BACA,iEACA,mD,yDAEA,mE,68BAEMA,S,qDACJ,kBAAYC,KAAZ,CAAmB,0IACXA,KADW,GAEjB,MAAKC,KAAL,CAAa,CACXC,aAAc,KADH,CAEXC,aAAc,MAAKC,QAAL,CAAcJ,KAAd,CAFH,CAGXK,WAAY,MAAKC,WAAL,CAAiBN,MAAMO,QAAvB,CAHD,CAAb,CAFiB,aAOlB,C,iGAEyBC,S,CAAW,CACnC,GAAML,cAAe,KAAKF,KAAL,CAAWE,YAAhC,CACA,GAAMM,WAAY,KAAKL,QAAL,CAAcI,SAAd,CAAlB,CACA,GAAME,WAAY,KAAKT,KAAL,CAAWI,UAA7B,CACA,GAAMM,QAAS,KAAKL,WAAL,CAAiBE,UAAUD,QAA3B,CAAf,CAEA,GAAIJ,eAAiBM,SAArB,CAAgC,CAC9B,KAAKG,QAAL,CAAc,CACZT,aAAcM,SADF,CAAd,EAGD,CACD,GAAIC,YAAcC,MAAlB,CAA0B,CACxB,KAAKC,QAAL,CAAc,CACZP,WAAYM,MADA,CAAd,EAGD,CACF,C,yDAEiB,CAChB,MAAO,CACLE,OAAQ,EADH,CAILC,WAAY,EAJP,CAAP,CAMD,C,0DACgBC,O,CAAS,CACxB,KAAKH,QAAL,CAAc,CAAEV,aAAca,OAAhB,CAAd,EACD,C,2DAEkB,CACjB,GAAMC,cAAe,CACnBC,MAAO,KAAKC,eAAL,GAAuBL,MADX,CAEnBM,UAAW,KAAKD,eAAL,GAAuBJ,UAFf,CAGnBM,kBAAmB,KAAKF,eAAL,GAAuBJ,UAHvB,CAArB,CAMA,MAAO,2BAAa,KAAKd,KAAlB,CAAyBgB,YAAzB,CAAP,CACD,C,0CAEQhB,K,CAAO,CACd,GAAIO,UAAW,KAAKD,WAAL,CAAiBN,MAAMO,QAAvB,CAAf,CACA,GAAMc,MAAOC,iBAAEC,IAAF,CACXhB,QADW,CAEX,sBAASiB,OAAMxB,KAAN,CAAYyB,KAAZ,GAAsBzB,MAAM0B,aAArC,EAFW,CAAb,CAIA,MAAOJ,kBAAEK,GAAF,CAAMN,IAAN,CAAY,aAAZ,CAAP,CACD,C,yDAEiB,iBAChB,MAAOC,kBAAEC,IAAF,CACL,KAAKvB,KAAL,CAAWO,QADN,CAEL,sBAASiB,OAAMxB,KAAN,CAAYyB,KAAZ,GAAsB,OAAKzB,KAAL,CAAW0B,aAA1C,EAFK,CAAP,CAID,C,gDAEWnB,Q,CAAU,CACpB,GAAIA,UAAY,CAACqB,MAAMC,OAAN,CAActB,QAAd,CAAjB,CAA0C,CACxC,MAAO,GAAGuB,MAAH,CAAUvB,QAAV,CAAP,CACD,CACDA,SAAW,GAAGuB,MAAH,CAAUC,KAAV,CAAgB,EAAhB,CAAoBxB,QAApB,CAAX,CACA,MAAOA,SAAP,CACD,C,+CAEY,CACX,MAAOyB,iBAAMC,YAAN,CAAmB,KAAKjC,KAAL,CAAWkC,OAA9B,CAAuC,CAC5CjB,MAAO,CACL,CACEkB,SAAU,EADZ,CAEEC,WAAY,EAFd,CADK,aAKA,KAAKpC,KAAL,CAAWkC,OAAX,CAAmBlC,KAAnB,CAAyBiB,KALzB,EADqC,CAAvC,CAAP,CASD,C,mDAEc,iBACb,GAAMoB,SAAU,QAAVA,QAAU,EAAM,CACpB,GAAI,OAAKrC,KAAL,CAAWsC,OAAX,GAAuBC,SAAvB,EAAoC,CAAC,OAAKvC,KAAL,CAAWsC,OAApD,CAA6D,OAC7D,OAAKE,gBAAL,CAAsB,IAAtB,EACD,CAHD,CAIA,GAAMC,MAAO,KAAKxC,KAAL,CAAWE,YAAX,CACT,KAAKF,KAAL,CAAWE,YADF,CAET,KAAKH,KAAL,CAAW0C,WAFf,CAGA,GAAI,KAAK1C,KAAL,CAAW2C,YAAf,CAA6B,CAC3B,MAAO,MAAK3C,KAAL,CAAW2C,YAAX,CAAwB,CAC7BN,eAD6B,CAE7BI,SAF6B,CAG7B5B,OAAQ,IAHqB,CAI7B+B,aAAc,KAAKC,eAAL,EAJe,CAAxB,CAAP,CAMD,CACD,MACE,+BAAC,cAAD,EACE,MAAO,KAAK7C,KAAL,CAAWiB,KADpB,CAEE,SAFF,CAGE,WAHF,CAIE,gBAJF,CAKE,QAASoB,OALX,kDAOG,KAAKpC,KAAL,CAAWE,YAAX,CACC,8BAAC,UAAD,EAAM,MAAO,KAAKH,KAAL,CAAW8C,SAAxB,CAAmC,KAAM,KAAK9C,KAAL,CAAW+C,IAApD,kDACG,KAAK9C,KAAL,CAAWE,YADd,CADD,CAKG,8BAAC,UAAD,EACE,MAAO,CAAC,KAAKH,KAAL,CAAW8C,SAAZ,CAAuB,KAAK9C,KAAL,CAAWgD,gBAAlC,CADT,CAEE,KAAM,KAAKhD,KAAL,CAAW+C,IAAX,GAAoB,KAApB,CAA4B,KAA5B,CAAoC,IAF5C,kDAIG,KAAK/C,KAAL,CAAW0C,WAJd,CAZN,CAmBG,KAAK1C,KAAL,CAAWkC,OAAX,GAAuBK,SAAvB,CAAmC,IAAnC,CAA0C,KAAKU,UAAL,EAnB7C,CADF,CAuBD,C,mDAEc,iBACb,MAAO,MAAKjD,KAAL,CAAWkD,YAAX,CACL,KAAKlD,KAAL,CAAWkD,YAAX,CAAwB,iBAAM,QAAKV,gBAAL,CAAsB,KAAtB,CAAN,EAAxB,CADK,CAGH,8BAAC,cAAD,EAAQ,MAAO,KAAKxC,KAAL,CAAWmD,WAA1B,kDACE,8BAAC,UAAD,mDACE,8BAAC,cAAD,EACE,gBACEC,aAAc,IADhB,CAEEC,YAAa,IAFf,CAGEC,aAAc,IAHhB,CAIEC,cAAe,IAJjB,CAKEC,WAAY,CALd,EAMK,KAAKxD,KAAL,CAAWyD,qBANhB,CADF,CASE,gBATF,CAUE,QAAS,kBAAM,CACb,OAAKjB,gBAAL,CAAsB,KAAtB,EACD,CAZH,kDAcE,8BAAC,UAAD,EAAM,MAAO,KAAKxC,KAAL,CAAW0D,yBAAxB,kDACG,KAAK1D,KAAL,CAAW2D,oBAAX,EAAmC,MADtC,CAdF,CADF,CADF,CAqBE,8BAAC,UAAD,mDACE,8BAAC,YAAD,EAAO,MAAO,KAAK3D,KAAL,CAAW4D,gBAAzB,kDACG,KAAK5D,KAAL,CAAW6D,SAAX,EAAwB,YAD3B,CADF,CArBF,CA0BE,8BAAC,YAAD,mDA1BF,CAHJ,CAgCD,C,uCAEQ,iBACP,MACE,+BAAC,iBAAD,EAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,kDACG,KAAKpB,YAAL,EADH,CAEE,8BAAC,kBAAD,EAEE,sBAAuB,CAAC,UAAD,CAAa,WAAb,CAFzB,CAGE,cAAc,OAHhB,CAIE,YAAa,KAJf,CAKE,QAAS,KAAK1C,KAAL,CAAWC,YALtB,CAME,eAAgB,yBAAM,CACpB,OAAKsC,gBAAL,CAAsB,KAAtB,EACD,CARH,kDAUE,8BAAC,oBAAD,EAAW,MAAO,KAAKxC,KAAL,CAAWgE,UAA7B,kDACG,KAAKd,YAAL,EADH,CAEE,8BAAC,qBAAD,EACE,KAAM,KAAKjD,KAAL,CAAWI,UADnB,CAEE,aAAc,sBAACgB,IAAD,CAAO4C,KAAP,QAAiBC,QAAOD,KAAP,CAAjB,EAFhB,CAGE,WAAY,6BAAG5C,KAAH,MAAGA,IAAH,OACV,+BAAC,kBAAD,EACE,SAAUA,KAAKrB,KAAL,CAAWyB,KAAX,GAAqB,OAAKzB,KAAL,CAAW0B,aAD5C,CAEE,WAFF,CAGE,MAASL,KAAKrB,KAAL,CAAWmE,QAAX,EAAuB5B,SAAxB,EAAuClB,KAAKrB,KAAL,CAAWmE,QAAX,EAAuB,IAA/D,CAAuE,OAAKnE,KAAL,CAAWoB,iBAAlF,CAAsG,OAAKpB,KAAL,CAAWmB,SAH1H,CAIE,QAAS,kBAAM,CAEb,GAAKE,KAAKrB,KAAL,CAAWmE,QAAX,EAAuB5B,SAAxB,EAAuClB,KAAKrB,KAAL,CAAWmE,QAAX,EAAuB,IAAlE,CAAyE,CAEvE,OACD,CACD,OAAK3B,gBAAL,CAAsB,KAAtB,EACA,OAAKxC,KAAL,CAAWoE,aAAX,CAAyB/C,KAAKrB,KAAL,CAAWyB,KAApC,EACA,OAAKb,QAAL,CAAc,CAAEyD,QAAShD,KAAKrB,KAAL,CAAWsE,KAAtB,CAAd,EACD,CAbH,kDAeE,8BAAC,UAAD,mDACE,8BAAC,UAAD,EAAM,MAAO,OAAKtE,KAAL,CAAWuE,aAAxB,kDACGlD,KAAKrB,KAAL,CAAWsE,KADd,CADF,CAfF,CAoBE,8BAAC,YAAD,mDACGjD,KAAKrB,KAAL,CAAWyB,KAAX,GAAqB,OAAKzB,KAAL,CAAW0B,aAAhC,CACC,8BAAC,YAAD,EAAO,aAAP,kDADD,CAGG,8BAAC,YAAD,EAAO,SAAU,KAAjB,kDAJN,CApBF,CADU,EAHd,kDAFF,CAVF,CAFF,CADF,CAqDD,C,sBAxNoB8C,gB,EA2NvBzE,SAAS0E,IAAT,CAAgB,+BAAiB,oBAC/BC,MAD+B,kBACtB,CACP,MAAO,+BAAC,mBAAD,CAAQ,IAAR,aAAiB,KAAK1E,KAAL,EAAjB,oDAAP,CACD,CAH8B,CAAjB,CAAhB,CAMAD,SAAS4E,SAAT,aACKC,0BADL,EAEEjC,aAAckC,oBAAUC,IAF1B,GAKA,GAAMC,gBAAiB,yCACrB,qBADqB,CAErB,EAFqB,CAGrBC,8BAHqB,EAIrBjF,QAJqB,CAAvB,C,QAM2BA,Q,CAAlBgF,c","file":"Picker.ios.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport { Picker, Modal, View, ViewPropTypes, FlatList } from \"react-native\";\nimport _ from \"lodash\";\nimport { Text } from \"./Text\";\nimport { List } from \"./List\";\nimport { IconNB as Icon } from \"./IconNB\";\nimport { Radio } from \"./Radio\";\nimport { Container } from \"./Container\";\nimport { ListItem } from \"./ListItem\";\nimport { Button } from \"./Button\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport computeProps from \"../utils/computeProps\";\n\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass PickerNB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      currentLabel: this.getLabel(props),\n      dataSource: this.getChildren(props.children)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentLabel = this.state.currentLabel;\n    const nextLabel = this.getLabel(nextProps);\n    const currentDS = this.state.dataSource;\n    const nextDS = this.getChildren(nextProps.children);\n\n    if (currentLabel !== nextLabel) {\n      this.setState({\n        currentLabel: nextLabel\n      });\n    }\n    if (currentDS !== nextDS) {\n      this.setState({\n        dataSource: nextDS\n      });\n    }\n  }\n\n  getInitialStyle() {\n    return {\n      picker: {\n        // alignItems: 'flex-end'\n      },\n      pickerItem: {}\n    };\n  }\n  _setModalVisible(visible) {\n    this.setState({ modalVisible: visible });\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().picker,\n      itemStyle: this.getInitialStyle().pickerItem,\n      itemDisabledStyle: this.getInitialStyle().pickerItem\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  getLabel(props) {\n    let children = this.getChildren(props.children);\n    const item = _.find(\n      children,\n      child => child.props.value === props.selectedValue\n    );\n    return _.get(item, \"props.label\");\n  }\n\n  getSelectedItem() {\n    return _.find(\n      this.props.children,\n      child => child.props.value === this.props.selectedValue\n    );\n  }\n\n  getChildren(children) {\n    if (children && !Array.isArray(children)) {\n      return [].concat(children);\n    }\n    children = [].concat.apply([], children)\n    return children;\n  }\n\n  renderIcon() {\n    return React.cloneElement(this.props.iosIcon, {\n      style: [\n        {\n          fontSize: 22,\n          lineHeight: 26\n        },\n        { ...this.props.iosIcon.props.style }\n      ]\n    });\n  }\n\n  renderButton() {\n    const onPress = () => {\n      if (this.props.enabled !== undefined && !this.props.enabled) return;\n      this._setModalVisible(true);\n    };\n    const text = this.state.currentLabel\n      ? this.state.currentLabel\n      : this.props.placeholder;\n    if (this.props.renderButton) {\n      return this.props.renderButton({\n        onPress,\n        text,\n        picker: this,\n        selectedItem: this.getSelectedItem()\n      });\n    }\n    return (\n      <Button\n        style={this.props.style}\n        dark\n        picker\n        transparent\n        onPress={onPress}\n      >\n        {this.state.currentLabel ? (\n          <Text style={this.props.textStyle} note={this.props.note}>\n            {this.state.currentLabel}\n          </Text>\n        ) : (\n            <Text\n              style={[this.props.textStyle, this.props.placeholderStyle]}\n              note={this.props.note === false ? false : true}\n            >\n              {this.props.placeholder}\n            </Text>\n          )}\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\n      </Button>\n    );\n  }\n\n  renderHeader() {\n    return this.props.renderHeader ? (\n      this.props.renderHeader(() => this._setModalVisible(false))\n    ) : (\n        <Header style={this.props.headerStyle}>\n          <Left>\n            <Button\n              style={{\n                shadowOffset: null,\n                shadowColor: null,\n                shadowRadius: null,\n                shadowOpacity: null,\n                marginLeft: 3,\n                ...this.props.headerBackButtonStyle\n              }}\n              transparent\n              onPress={() => {\n                this._setModalVisible(false);\n              }}\n            >\n              <Text style={this.props.headerBackButtonTextStyle}>\n                {this.props.headerBackButtonText || \"Back\"}\n              </Text>\n            </Button>\n          </Left>\n          <Body>\n            <Title style={this.props.headerTitleStyle}>\n              {this.props.iosHeader || \"Select One\"}\n            </Title>\n          </Body>\n          <Right />\n        </Header>\n      );\n  }\n\n  render() {\n    return (\n      <View ref={c => (this._root = c)}>\n        {this.renderButton()}\n        <Modal\n          // supportedOrientations={this.props.supportedOrientations || null}\n          supportedOrientations={['portrait', 'landscape']}\n          animationType=\"slide\"\n          transparent={false}\n          visible={this.state.modalVisible}\n          onRequestClose={() => {\n            this._setModalVisible(false);\n          }}\n        >\n          <Container style={this.props.modalStyle}>\n            {this.renderHeader()}\n            <FlatList\n              data={this.state.dataSource}\n              keyExtractor={(item, index) => String(index)}\n              renderItem={({ item }) => (\n                <ListItem\n                  selected={item.props.value === this.props.selectedValue}\n                  button\n                  style={((item.props.disabled != undefined) && (item.props.disabled == true))? this.props.itemDisabledStyle : this.props.itemStyle}\n                  onPress={() => {\n                    //Bharat: ignore click on disabled\n                    if ((item.props.disabled != undefined) && (item.props.disabled == true)) {\n                      // console.log('Ignoring disabled item='+item.props.value);\n                      return;\n                    }\n                    this._setModalVisible(false);\n                    this.props.onValueChange(item.props.value);\n                    this.setState({ current: item.props.label });\n                  }}\n                >\n                  <Left>\n                    <Text style={this.props.itemTextStyle}>\n                      {item.props.label}\n                    </Text>\n                  </Left>\n                  <Right>\n                    {item.props.value === this.props.selectedValue ? (\n                      <Radio selected />\n                    ) : (\n                        <Radio selected={false} />\n                      )}\n                  </Right>\n                </ListItem>\n              )}\n            />\n          </Container>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nPickerNB.Item = createReactClass({\n  render() {\n    return <Picker.Item {...this.props()} />;\n  }\n});\n\nPickerNB.propTypes = {\n  ...ViewPropTypes,\n  renderButton: PropTypes.func\n};\n\nconst StyledPickerNB = connectStyle(\n  \"NativeBase.PickerNB\",\n  {},\n  mapPropsToStyleNames\n)(PickerNB);\n\nexport { StyledPickerNB as PickerNB };\n"]}